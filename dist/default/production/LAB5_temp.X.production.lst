

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 17 02:53:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  02DC                     __pidataBANK0:
   215                           
   216                           ;initializer for _upload
   217  02DC  3401               	retlw	1
   218                           
   219                           	psect	nvBANK0
   220  002C                     __pnvBANK0:
   221  002C                     _dozns_0:
   222  002C                     	ds	1
   223  002D                     _hundreds:
   224  002D                     	ds	1
   225  002E                     _dozns:
   226  002E                     	ds	1
   227  002F                     _unit:
   228  002F                     	ds	1
   229  0030                     _c:
   230  0030                     	ds	1
   231  0018                     _RCSTAbits	set	24
   232  0007                     _PORTC	set	7
   233  0006                     _PORTB	set	6
   234  0005                     _PORTA	set	5
   235  001A                     _RCREG	set	26
   236  0006                     _PORTBbits	set	6
   237  000B                     _INTCONbits	set	11
   238  0019                     _TXREG	set	25
   239  000C                     _PIR1bits	set	12
   240  0008                     _PORTD	set	8
   241  009A                     _SPBRGH	set	154
   242  0099                     _SPBRG	set	153
   243  0098                     _TXSTAbits	set	152
   244  0096                     _IOCB	set	150
   245  008C                     _PIE1bits	set	140
   246  0095                     _WPUB	set	149
   247  0081                     _OPTION_REGbits	set	129
   248  0088                     _TRISD	set	136
   249  0087                     _TRISC	set	135
   250  0086                     _TRISB	set	134
   251  0085                     _TRISA	set	133
   252  008F                     _OSCCONbits	set	143
   253  0187                     _BAUDCTLbits	set	391
   254  0188                     _ANSEL	set	392
   255  0189                     _ANSELH	set	393
   256                           
   257                           	psect	cinit
   258  000F                     start_initialization:	
   259                           ; #config settings
   260                           
   261  000F                     __initialization:
   262                           
   263                           ; Initialize objects allocated to BANK0
   264  000F  120A  118A  22DC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   265  0014  00B4               	movwf	__pdataBANK0& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0015  01B1               	clrf	__pbssBANK0& (0+127)
   269  0016  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   270  0017  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   271                           
   272                           ; Clear objects allocated to COMMON
   273  0018  01FA               	clrf	__pbssCOMMON& (0+127)
   274  0019  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   275  001A  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   276  001B  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   277  001C                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  001C                     __end_of__initialization:
   281  001C  0183               	clrf	3
   282  001D  120A  118A  2913   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  007A                     __pbssCOMMON:
   286  007A                     _temp:
   287  007A                     	ds	1
   288  007B                     _unit_0:
   289  007B                     	ds	1
   290  007C                     _temp_0:
   291  007C                     	ds	1
   292  007D                     _dzn:
   293  007D                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296  0031                     __pbssBANK0:
   297  0031                     _carry:
   298  0031                     	ds	1
   299  0032                     _download:
   300  0032                     	ds	1
   301  0033                     _var:
   302  0033                     	ds	1
   303                           
   304                           	psect	dataBANK0
   305  0034                     __pdataBANK0:
   306  0034                     _upload:
   307  0034                     	ds	1
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:
   311  0070                     ?_initCONFIG:
   312  0070                     ?_main:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_isr:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?___bmul:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ___bmul@multiplicand:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 1 bytes @ 0x0
   326  0070                     	ds	1
   327  0071                     ??___bmul:
   328                           
   329                           ; 1 bytes @ 0x1
   330  0071                     	ds	1
   331  0072                     ___bmul@product:
   332                           
   333                           ; 1 bytes @ 0x2
   334  0072                     	ds	1
   335  0073                     ___bmul@multiplier:
   336                           
   337                           ; 1 bytes @ 0x3
   338  0073                     	ds	1
   339  0074                     ??_isr:
   340                           
   341                           ; 1 bytes @ 0x4
   342  0074                     	ds	6
   343                           
   344                           	psect	cstackBANK0
   345  0020                     __pcstackBANK0:
   346  0020                     ??_initCONFIG:
   347  0020                     ?___awdiv:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0020                     ?___awmod:	
   351                           ; 2 bytes @ 0x0
   352                           
   353  0020                     ___awdiv@divisor:	
   354                           ; 2 bytes @ 0x0
   355                           
   356  0020                     ___awmod@divisor:	
   357                           ; 2 bytes @ 0x0
   358                           
   359                           
   360                           ; 2 bytes @ 0x0
   361  0020                     	ds	2
   362  0022                     ___awdiv@dividend:
   363  0022                     ___awmod@dividend:	
   364                           ; 2 bytes @ 0x2
   365                           
   366                           
   367                           ; 2 bytes @ 0x2
   368  0022                     	ds	2
   369  0024                     ??___awdiv:
   370  0024                     ??___awmod:	
   371                           ; 1 bytes @ 0x4
   372                           
   373                           
   374                           ; 1 bytes @ 0x4
   375  0024                     	ds	1
   376  0025                     ___awdiv@counter:
   377  0025                     ___awmod@counter:	
   378                           ; 1 bytes @ 0x5
   379                           
   380                           
   381                           ; 1 bytes @ 0x5
   382  0025                     	ds	1
   383  0026                     ___awdiv@sign:
   384  0026                     ___awmod@sign:	
   385                           ; 1 bytes @ 0x6
   386                           
   387                           
   388                           ; 1 bytes @ 0x6
   389  0026                     	ds	1
   390  0027                     ___awdiv@quotient:
   391                           
   392                           ; 2 bytes @ 0x7
   393  0027                     	ds	2
   394  0029                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x9
   397  0029                     	ds	3
   398                           
   399                           	psect	maintext
   400  0113                     __pmaintext:	
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 47 in file "main.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       3       0       0       0
   423 ;;      Totals:         0       3       0       0       0
   424 ;;Total ram usage:        3 bytes
   425 ;; Hardware stack levels required when called: 3
   426 ;; This function calls:
   427 ;;		___awdiv
   428 ;;		___awmod
   429 ;;		_initCONFIG
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _main
   437  0113                     _main:
   438  0113                     l1131:	
   439                           ;incstack = 0
   440                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   441                           
   442                           
   443                           ;main.c: 48:     initCONFIG();
   444  0113  120A  118A  228A  120A  118A  	fcall	_initCONFIG
   445  0118                     l1133:
   446                           
   447                           ;main.c: 50:         c = PORTD;
   448  0118  1283               	bcf	3,5	;RP0=0, select bank0
   449  0119  1303               	bcf	3,6	;RP1=0, select bank0
   450  011A  0808               	movf	8,w	;volatile
   451  011B  00A9               	movwf	??_main
   452  011C  0829               	movf	??_main,w
   453  011D  00B0               	movwf	_c
   454  011E                     l1135:
   455                           
   456                           ;main.c: 51:         hundreds = c/100;
   457  011E  3064               	movlw	100
   458  011F  00A0               	movwf	___awdiv@divisor
   459  0120  3000               	movlw	0
   460  0121  00A1               	movwf	___awdiv@divisor+1
   461  0122  0830               	movf	_c,w
   462  0123  00A9               	movwf	??_main
   463  0124  01AA               	clrf	??_main+1
   464  0125  0829               	movf	??_main,w
   465  0126  00A2               	movwf	___awdiv@dividend
   466  0127  082A               	movf	??_main+1,w
   467  0128  00A3               	movwf	___awdiv@dividend+1
   468  0129  120A  118A  21C6  120A  118A  	fcall	___awdiv
   469  012E  1283               	bcf	3,5	;RP0=0, select bank0
   470  012F  1303               	bcf	3,6	;RP1=0, select bank0
   471  0130  0820               	movf	?___awdiv,w
   472  0131  00AB               	movwf	??_main+2
   473  0132  082B               	movf	??_main+2,w
   474  0133  00AD               	movwf	_hundreds
   475  0134                     l1137:
   476                           
   477                           ;main.c: 52:         dozns_0 = c%100;
   478  0134  3064               	movlw	100
   479  0135  00A0               	movwf	___awmod@divisor
   480  0136  3000               	movlw	0
   481  0137  00A1               	movwf	___awmod@divisor+1
   482  0138  0830               	movf	_c,w
   483  0139  00A9               	movwf	??_main
   484  013A  01AA               	clrf	??_main+1
   485  013B  0829               	movf	??_main,w
   486  013C  00A2               	movwf	___awmod@dividend
   487  013D  082A               	movf	??_main+1,w
   488  013E  00A3               	movwf	___awmod@dividend+1
   489  013F  120A  118A  222F  120A  118A  	fcall	___awmod
   490  0144  1283               	bcf	3,5	;RP0=0, select bank0
   491  0145  1303               	bcf	3,6	;RP1=0, select bank0
   492  0146  0820               	movf	?___awmod,w
   493  0147  00AB               	movwf	??_main+2
   494  0148  082B               	movf	??_main+2,w
   495  0149  00AC               	movwf	_dozns_0
   496  014A                     l1139:
   497                           
   498                           ;main.c: 53:         dozns = dozns_0/10;
   499  014A  300A               	movlw	10
   500  014B  00A0               	movwf	___awdiv@divisor
   501  014C  3000               	movlw	0
   502  014D  00A1               	movwf	___awdiv@divisor+1
   503  014E  082C               	movf	_dozns_0,w
   504  014F  00A9               	movwf	??_main
   505  0150  01AA               	clrf	??_main+1
   506  0151  0829               	movf	??_main,w
   507  0152  00A2               	movwf	___awdiv@dividend
   508  0153  082A               	movf	??_main+1,w
   509  0154  00A3               	movwf	___awdiv@dividend+1
   510  0155  120A  118A  21C6  120A  118A  	fcall	___awdiv
   511  015A  1283               	bcf	3,5	;RP0=0, select bank0
   512  015B  1303               	bcf	3,6	;RP1=0, select bank0
   513  015C  0820               	movf	?___awdiv,w
   514  015D  00AB               	movwf	??_main+2
   515  015E  082B               	movf	??_main+2,w
   516  015F  00AE               	movwf	_dozns
   517  0160                     l1141:
   518                           
   519                           ;main.c: 54:         unit = c%10;
   520  0160  300A               	movlw	10
   521  0161  00A0               	movwf	___awmod@divisor
   522  0162  3000               	movlw	0
   523  0163  00A1               	movwf	___awmod@divisor+1
   524  0164  0830               	movf	_c,w
   525  0165  00A9               	movwf	??_main
   526  0166  01AA               	clrf	??_main+1
   527  0167  0829               	movf	??_main,w
   528  0168  00A2               	movwf	___awmod@dividend
   529  0169  082A               	movf	??_main+1,w
   530  016A  00A3               	movwf	___awmod@dividend+1
   531  016B  120A  118A  222F  120A  118A  	fcall	___awmod
   532  0170  1283               	bcf	3,5	;RP0=0, select bank0
   533  0171  1303               	bcf	3,6	;RP1=0, select bank0
   534  0172  0820               	movf	?___awmod,w
   535  0173  00AB               	movwf	??_main+2
   536  0174  082B               	movf	??_main+2,w
   537  0175  00AF               	movwf	_unit
   538  0176                     l1143:
   539                           
   540                           ;main.c: 55:         if (PIR1bits.TXIF){
   541  0176  1E0C               	btfss	12,4	;volatile
   542  0177  2979               	goto	u631
   543  0178  297A               	goto	u630
   544  0179                     u631:
   545  0179  29BF               	goto	l1155
   546  017A                     u630:
   547  017A                     l1145:
   548                           
   549                           ;main.c: 56:                     _delay((unsigned long)((20)*(8000000/4000.0)));
   550  017A  3034               	movlw	52
   551  017B  1283               	bcf	3,5	;RP0=0, select bank0
   552  017C  1303               	bcf	3,6	;RP1=0, select bank0
   553  017D  00AA               	movwf	??_main+1
   554  017E  30F1               	movlw	241
   555  017F  00A9               	movwf	??_main
   556  0180                     u837:
   557  0180  0BA9               	decfsz	??_main,f
   558  0181  2980               	goto	u837
   559  0182  0BAA               	decfsz	??_main+1,f
   560  0183  2980               	goto	u837
   561  0184                     l1147:
   562                           
   563                           ;main.c: 57:                     TXREG = hundreds + 48;
   564  0184  1283               	bcf	3,5	;RP0=0, select bank0
   565  0185  1303               	bcf	3,6	;RP1=0, select bank0
   566  0186  082D               	movf	_hundreds,w
   567  0187  3E30               	addlw	48
   568  0188  0099               	movwf	25	;volatile
   569  0189                     l1149:
   570                           
   571                           ;main.c: 58:                     _delay((unsigned long)((20)*(8000000/4000.0)));
   572  0189  3034               	movlw	52
   573  018A  1283               	bcf	3,5	;RP0=0, select bank0
   574  018B  1303               	bcf	3,6	;RP1=0, select bank0
   575  018C  00AA               	movwf	??_main+1
   576  018D  30F1               	movlw	241
   577  018E  00A9               	movwf	??_main
   578  018F                     u847:
   579  018F  0BA9               	decfsz	??_main,f
   580  0190  298F               	goto	u847
   581  0191  0BAA               	decfsz	??_main+1,f
   582  0192  298F               	goto	u847
   583                           
   584                           ;main.c: 59:                     TXREG = dozns + 48;
   585  0193  1283               	bcf	3,5	;RP0=0, select bank0
   586  0194  1303               	bcf	3,6	;RP1=0, select bank0
   587  0195  082E               	movf	_dozns,w
   588  0196  3E30               	addlw	48
   589  0197  0099               	movwf	25	;volatile
   590  0198                     l1151:
   591                           
   592                           ;main.c: 60:                     _delay((unsigned long)((20)*(8000000/4000.0)));
   593  0198  3034               	movlw	52
   594  0199  1283               	bcf	3,5	;RP0=0, select bank0
   595  019A  1303               	bcf	3,6	;RP1=0, select bank0
   596  019B  00AA               	movwf	??_main+1
   597  019C  30F1               	movlw	241
   598  019D  00A9               	movwf	??_main
   599  019E                     u857:
   600  019E  0BA9               	decfsz	??_main,f
   601  019F  299E               	goto	u857
   602  01A0  0BAA               	decfsz	??_main+1,f
   603  01A1  299E               	goto	u857
   604  01A2                     l1153:
   605                           
   606                           ;main.c: 61:                     TXREG = unit + 48;
   607  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   608  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   609  01A4  082F               	movf	_unit,w
   610  01A5  3E30               	addlw	48
   611  01A6  0099               	movwf	25	;volatile
   612                           
   613                           ;main.c: 62:                     _delay((unsigned long)((20)*(8000000/4000.0)));
   614  01A7  3034               	movlw	52
   615  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   616  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   617  01AA  00AA               	movwf	??_main+1
   618  01AB  30F1               	movlw	241
   619  01AC  00A9               	movwf	??_main
   620  01AD                     u867:
   621  01AD  0BA9               	decfsz	??_main,f
   622  01AE  29AD               	goto	u867
   623  01AF  0BAA               	decfsz	??_main+1,f
   624  01B0  29AD               	goto	u867
   625                           
   626                           ;main.c: 63:                     TXREG = 0x0D;
   627  01B1  300D               	movlw	13
   628  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   629  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   630  01B4  0099               	movwf	25	;volatile
   631                           
   632                           ;main.c: 64:                     _delay((unsigned long)((20)*(8000000/4000.0)));
   633  01B5  3034               	movlw	52
   634  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   635  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   636  01B8  00AA               	movwf	??_main+1
   637  01B9  30F1               	movlw	241
   638  01BA  00A9               	movwf	??_main
   639  01BB                     u877:
   640  01BB  0BA9               	decfsz	??_main,f
   641  01BC  29BB               	goto	u877
   642  01BD  0BAA               	decfsz	??_main+1,f
   643  01BE  29BB               	goto	u877
   644  01BF                     l1155:
   645                           
   646                           ;main.c: 66:         PIR1bits.TXIF = 0;
   647  01BF  1283               	bcf	3,5	;RP0=0, select bank0
   648  01C0  1303               	bcf	3,6	;RP1=0, select bank0
   649  01C1  120C               	bcf	12,4	;volatile
   650  01C2  2918               	goto	l1133
   651  01C3  120A  118A  280C   	ljmp	start
   652  01C6                     __end_of_main:
   653                           
   654                           	psect	text1
   655  028A                     __ptext1:	
   656 ;; *************** function _initCONFIG *****************
   657 ;; Defined at:
   658 ;;		line 134 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0
   675 ;;      Totals:         0       0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 2
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _initCONFIG
   688  028A                     _initCONFIG:
   689  028A                     l987:	
   690                           ;incstack = 0
   691                           ; Regs used in _initCONFIG: [wreg+status,2]
   692                           
   693                           
   694                           ;main.c: 135:     OSCCONbits.IRCF2 = 1;
   695  028A  1683               	bsf	3,5	;RP0=1, select bank1
   696  028B  1303               	bcf	3,6	;RP1=0, select bank1
   697  028C  170F               	bsf	15,6	;volatile
   698                           
   699                           ;main.c: 136:     OSCCONbits.IRCF1 = 1;
   700  028D  168F               	bsf	15,5	;volatile
   701                           
   702                           ;main.c: 137:     OSCCONbits.IRCF0 = 1;
   703  028E  160F               	bsf	15,4	;volatile
   704                           
   705                           ;main.c: 138:     OSCCONbits.SCS = 1;
   706  028F  140F               	bsf	15,0	;volatile
   707  0290                     l989:
   708                           
   709                           ;main.c: 139:     ANSELH = 0;
   710  0290  1683               	bsf	3,5	;RP0=1, select bank3
   711  0291  1703               	bsf	3,6	;RP1=1, select bank3
   712  0292  0189               	clrf	9	;volatile
   713                           
   714                           ;main.c: 140:     ANSEL = 0;
   715  0293  0188               	clrf	8	;volatile
   716                           
   717                           ;main.c: 141:     TRISA = 0;
   718  0294  1683               	bsf	3,5	;RP0=1, select bank1
   719  0295  1303               	bcf	3,6	;RP1=0, select bank1
   720  0296  0185               	clrf	5	;volatile
   721  0297                     l991:
   722                           
   723                           ;main.c: 142:     TRISB = 0b00000011;
   724  0297  3003               	movlw	3
   725  0298  0086               	movwf	6	;volatile
   726  0299                     l993:
   727                           
   728                           ;main.c: 143:     TRISC = 0x80;
   729  0299  3080               	movlw	128
   730  029A  0087               	movwf	7	;volatile
   731                           
   732                           ;main.c: 144:     PORTA = 0;
   733  029B  1283               	bcf	3,5	;RP0=0, select bank0
   734  029C  1303               	bcf	3,6	;RP1=0, select bank0
   735  029D  0185               	clrf	5	;volatile
   736  029E                     l995:
   737                           
   738                           ;main.c: 145:     PORTB = 0b00000011;
   739  029E  3003               	movlw	3
   740  029F  0086               	movwf	6	;volatile
   741  02A0                     l997:
   742                           
   743                           ;main.c: 146:     PORTC = 0;
   744  02A0  0187               	clrf	7	;volatile
   745  02A1                     l999:
   746                           
   747                           ;main.c: 147:     PORTD = 0;
   748  02A1  0188               	clrf	8	;volatile
   749  02A2                     l1001:
   750                           
   751                           ;main.c: 148:     TRISD = 0b00000000;
   752  02A2  1683               	bsf	3,5	;RP0=1, select bank1
   753  02A3  1303               	bcf	3,6	;RP1=0, select bank1
   754  02A4  0188               	clrf	8	;volatile
   755  02A5                     l1003:
   756                           
   757                           ;main.c: 149:     OPTION_REGbits.nRBPU = 0;
   758  02A5  1381               	bcf	1,7	;volatile
   759                           
   760                           ;main.c: 150:     WPUB = 0b00000011;
   761  02A6  3003               	movlw	3
   762  02A7  0095               	movwf	21	;volatile
   763  02A8                     l1005:
   764                           
   765                           ;main.c: 151:     INTCONbits.GIE = 1;
   766  02A8  178B               	bsf	11,7	;volatile
   767  02A9                     l1007:
   768                           
   769                           ;main.c: 152:     INTCONbits.PEIE = 1;
   770  02A9  170B               	bsf	11,6	;volatile
   771  02AA                     l1009:
   772                           
   773                           ;main.c: 153:     PIE1bits.RCIE = 1;
   774  02AA  168C               	bsf	12,5	;volatile
   775  02AB                     l1011:
   776                           
   777                           ;main.c: 154:     PIR1bits.RCIF = 0;
   778  02AB  1283               	bcf	3,5	;RP0=0, select bank0
   779  02AC  1303               	bcf	3,6	;RP1=0, select bank0
   780  02AD  128C               	bcf	12,5	;volatile
   781  02AE                     l1013:
   782                           
   783                           ;main.c: 155:     INTCONbits.RBIE = 1;
   784  02AE  158B               	bsf	11,3	;volatile
   785                           
   786                           ;main.c: 156:     IOCB = 0b00000011;
   787  02AF  3003               	movlw	3
   788  02B0  1683               	bsf	3,5	;RP0=1, select bank1
   789  02B1  1303               	bcf	3,6	;RP1=0, select bank1
   790  02B2  0096               	movwf	22	;volatile
   791  02B3                     l1015:
   792                           
   793                           ;main.c: 157:     RCSTAbits.SPEN = 1;
   794  02B3  1283               	bcf	3,5	;RP0=0, select bank0
   795  02B4  1303               	bcf	3,6	;RP1=0, select bank0
   796  02B5  1798               	bsf	24,7	;volatile
   797  02B6                     l1017:
   798                           
   799                           ;main.c: 158:     RCSTAbits.RX9 = 0;
   800  02B6  1318               	bcf	24,6	;volatile
   801  02B7                     l1019:
   802                           
   803                           ;main.c: 159:     RCSTAbits.CREN = 1;
   804  02B7  1618               	bsf	24,4	;volatile
   805  02B8                     l1021:
   806                           
   807                           ;main.c: 160:     TXSTAbits.TXEN = 1;
   808  02B8  1683               	bsf	3,5	;RP0=1, select bank1
   809  02B9  1303               	bcf	3,6	;RP1=0, select bank1
   810  02BA  1698               	bsf	24,5	;volatile
   811  02BB                     l1023:
   812                           
   813                           ;main.c: 161:     INTCONbits.RBIF = 0;
   814  02BB  100B               	bcf	11,0	;volatile
   815  02BC                     l1025:
   816                           
   817                           ;main.c: 162:     TXSTAbits.SYNC = 0;
   818  02BC  1218               	bcf	24,4	;volatile
   819  02BD                     l1027:
   820                           
   821                           ;main.c: 163:     TXSTAbits.BRGH = 1;
   822  02BD  1518               	bsf	24,2	;volatile
   823  02BE                     l1029:
   824                           
   825                           ;main.c: 164:     BAUDCTLbits.BRG16 = 1;
   826  02BE  1683               	bsf	3,5	;RP0=1, select bank3
   827  02BF  1703               	bsf	3,6	;RP1=1, select bank3
   828  02C0  1587               	bsf	7,3	;volatile
   829                           
   830                           ;main.c: 165:     SPBRG = 207;
   831  02C1  30CF               	movlw	207
   832  02C2  1683               	bsf	3,5	;RP0=1, select bank1
   833  02C3  1303               	bcf	3,6	;RP1=0, select bank1
   834  02C4  0099               	movwf	25	;volatile
   835  02C5                     l1031:
   836                           
   837                           ;main.c: 166:     SPBRGH = 0;
   838  02C5  019A               	clrf	26	;volatile
   839  02C6                     l127:
   840  02C6  0008               	return
   841  02C7                     __end_of_initCONFIG:
   842                           
   843                           	psect	text2
   844  022F                     __ptext2:	
   845 ;; *************** function ___awmod *****************
   846 ;; Defined at:
   847 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  divisor         2    0[BANK0 ] int 
   850 ;;  dividend        2    2[BANK0 ] int 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  sign            1    6[BANK0 ] unsigned char 
   853 ;;  counter         1    5[BANK0 ] unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  2    0[BANK0 ] int 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       4       0       0       0
   864 ;;      Locals:         0       2       0       0       0
   865 ;;      Temps:          0       1       0       0       0
   866 ;;      Totals:         0       7       0       0       0
   867 ;;Total ram usage:        7 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 2
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function ___awmod
   879  022F                     ___awmod:
   880  022F                     l1093:	
   881                           ;incstack = 0
   882                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   883                           
   884  022F  1283               	bcf	3,5	;RP0=0, select bank0
   885  0230  1303               	bcf	3,6	;RP1=0, select bank0
   886  0231  01A6               	clrf	___awmod@sign
   887  0232                     l1095:
   888  0232  1FA3               	btfss	___awmod@dividend+1,7
   889  0233  2A35               	goto	u541
   890  0234  2A36               	goto	u540
   891  0235                     u541:
   892  0235  2A3D               	goto	l1101
   893  0236                     u540:
   894  0236                     l1097:
   895  0236  09A2               	comf	___awmod@dividend,f
   896  0237  09A3               	comf	___awmod@dividend+1,f
   897  0238  0AA2               	incf	___awmod@dividend,f
   898  0239  1903               	skipnz
   899  023A  0AA3               	incf	___awmod@dividend+1,f
   900  023B                     l1099:
   901  023B  01A6               	clrf	___awmod@sign
   902  023C  0AA6               	incf	___awmod@sign,f
   903  023D                     l1101:
   904  023D  1FA1               	btfss	___awmod@divisor+1,7
   905  023E  2A40               	goto	u551
   906  023F  2A41               	goto	u550
   907  0240                     u551:
   908  0240  2A46               	goto	l1105
   909  0241                     u550:
   910  0241                     l1103:
   911  0241  09A0               	comf	___awmod@divisor,f
   912  0242  09A1               	comf	___awmod@divisor+1,f
   913  0243  0AA0               	incf	___awmod@divisor,f
   914  0244  1903               	skipnz
   915  0245  0AA1               	incf	___awmod@divisor+1,f
   916  0246                     l1105:
   917  0246  0820               	movf	___awmod@divisor,w
   918  0247  0421               	iorwf	___awmod@divisor+1,w
   919  0248  1903               	btfsc	3,2
   920  0249  2A4B               	goto	u561
   921  024A  2A4C               	goto	u560
   922  024B                     u561:
   923  024B  2A7B               	goto	l1123
   924  024C                     u560:
   925  024C                     l1107:
   926  024C  01A5               	clrf	___awmod@counter
   927  024D  0AA5               	incf	___awmod@counter,f
   928  024E  2A5A               	goto	l1113
   929  024F                     l1109:
   930  024F  3001               	movlw	1
   931  0250                     u575:
   932  0250  1003               	clrc
   933  0251  0DA0               	rlf	___awmod@divisor,f
   934  0252  0DA1               	rlf	___awmod@divisor+1,f
   935  0253  3EFF               	addlw	-1
   936  0254  1D03               	skipz
   937  0255  2A50               	goto	u575
   938  0256                     l1111:
   939  0256  3001               	movlw	1
   940  0257  00A4               	movwf	??___awmod
   941  0258  0824               	movf	??___awmod,w
   942  0259  07A5               	addwf	___awmod@counter,f
   943  025A                     l1113:
   944  025A  1FA1               	btfss	___awmod@divisor+1,7
   945  025B  2A5D               	goto	u581
   946  025C  2A5E               	goto	u580
   947  025D                     u581:
   948  025D  2A4F               	goto	l1109
   949  025E                     u580:
   950  025E                     l1115:
   951  025E  0821               	movf	___awmod@divisor+1,w
   952  025F  0223               	subwf	___awmod@dividend+1,w
   953  0260  1D03               	skipz
   954  0261  2A64               	goto	u595
   955  0262  0820               	movf	___awmod@divisor,w
   956  0263  0222               	subwf	___awmod@dividend,w
   957  0264                     u595:
   958  0264  1C03               	skipc
   959  0265  2A67               	goto	u591
   960  0266  2A68               	goto	u590
   961  0267                     u591:
   962  0267  2A6E               	goto	l1119
   963  0268                     u590:
   964  0268                     l1117:
   965  0268  0820               	movf	___awmod@divisor,w
   966  0269  02A2               	subwf	___awmod@dividend,f
   967  026A  0821               	movf	___awmod@divisor+1,w
   968  026B  1C03               	skipc
   969  026C  03A3               	decf	___awmod@dividend+1,f
   970  026D  02A3               	subwf	___awmod@dividend+1,f
   971  026E                     l1119:
   972  026E  3001               	movlw	1
   973  026F                     u605:
   974  026F  1003               	clrc
   975  0270  0CA1               	rrf	___awmod@divisor+1,f
   976  0271  0CA0               	rrf	___awmod@divisor,f
   977  0272  3EFF               	addlw	-1
   978  0273  1D03               	skipz
   979  0274  2A6F               	goto	u605
   980  0275                     l1121:
   981  0275  3001               	movlw	1
   982  0276  02A5               	subwf	___awmod@counter,f
   983  0277  1D03               	btfss	3,2
   984  0278  2A7A               	goto	u611
   985  0279  2A7B               	goto	u610
   986  027A                     u611:
   987  027A  2A5E               	goto	l1115
   988  027B                     u610:
   989  027B                     l1123:
   990  027B  0826               	movf	___awmod@sign,w
   991  027C  1903               	btfsc	3,2
   992  027D  2A7F               	goto	u621
   993  027E  2A80               	goto	u620
   994  027F                     u621:
   995  027F  2A85               	goto	l1127
   996  0280                     u620:
   997  0280                     l1125:
   998  0280  09A2               	comf	___awmod@dividend,f
   999  0281  09A3               	comf	___awmod@dividend+1,f
  1000  0282  0AA2               	incf	___awmod@dividend,f
  1001  0283  1903               	skipnz
  1002  0284  0AA3               	incf	___awmod@dividend+1,f
  1003  0285                     l1127:
  1004  0285  0823               	movf	___awmod@dividend+1,w
  1005  0286  00A1               	movwf	?___awmod+1
  1006  0287  0822               	movf	___awmod@dividend,w
  1007  0288  00A0               	movwf	?___awmod
  1008  0289                     l379:
  1009  0289  0008               	return
  1010  028A                     __end_of___awmod:
  1011                           
  1012                           	psect	text3
  1013  01C6                     __ptext3:	
  1014 ;; *************** function ___awdiv *****************
  1015 ;; Defined at:
  1016 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  divisor         2    0[BANK0 ] int 
  1019 ;;  dividend        2    2[BANK0 ] int 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  quotient        2    7[BANK0 ] int 
  1022 ;;  sign            1    6[BANK0 ] unsigned char 
  1023 ;;  counter         1    5[BANK0 ] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  2    0[BANK0 ] int 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       4       0       0       0
  1034 ;;      Locals:         0       4       0       0       0
  1035 ;;      Temps:          0       1       0       0       0
  1036 ;;      Totals:         0       9       0       0       0
  1037 ;;Total ram usage:        9 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 2
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function ___awdiv
  1049  01C6                     ___awdiv:
  1050  01C6                     l1049:	
  1051                           ;incstack = 0
  1052                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1053                           
  1054  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1055  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1056  01C8  01A6               	clrf	___awdiv@sign
  1057  01C9                     l1051:
  1058  01C9  1FA1               	btfss	___awdiv@divisor+1,7
  1059  01CA  29CC               	goto	u441
  1060  01CB  29CD               	goto	u440
  1061  01CC                     u441:
  1062  01CC  29D4               	goto	l1057
  1063  01CD                     u440:
  1064  01CD                     l1053:
  1065  01CD  09A0               	comf	___awdiv@divisor,f
  1066  01CE  09A1               	comf	___awdiv@divisor+1,f
  1067  01CF  0AA0               	incf	___awdiv@divisor,f
  1068  01D0  1903               	skipnz
  1069  01D1  0AA1               	incf	___awdiv@divisor+1,f
  1070  01D2                     l1055:
  1071  01D2  01A6               	clrf	___awdiv@sign
  1072  01D3  0AA6               	incf	___awdiv@sign,f
  1073  01D4                     l1057:
  1074  01D4  1FA3               	btfss	___awdiv@dividend+1,7
  1075  01D5  29D7               	goto	u451
  1076  01D6  29D8               	goto	u450
  1077  01D7                     u451:
  1078  01D7  29E1               	goto	l1063
  1079  01D8                     u450:
  1080  01D8                     l1059:
  1081  01D8  09A2               	comf	___awdiv@dividend,f
  1082  01D9  09A3               	comf	___awdiv@dividend+1,f
  1083  01DA  0AA2               	incf	___awdiv@dividend,f
  1084  01DB  1903               	skipnz
  1085  01DC  0AA3               	incf	___awdiv@dividend+1,f
  1086  01DD                     l1061:
  1087  01DD  3001               	movlw	1
  1088  01DE  00A4               	movwf	??___awdiv
  1089  01DF  0824               	movf	??___awdiv,w
  1090  01E0  06A6               	xorwf	___awdiv@sign,f
  1091  01E1                     l1063:
  1092  01E1  01A7               	clrf	___awdiv@quotient
  1093  01E2  01A8               	clrf	___awdiv@quotient+1
  1094  01E3                     l1065:
  1095  01E3  0820               	movf	___awdiv@divisor,w
  1096  01E4  0421               	iorwf	___awdiv@divisor+1,w
  1097  01E5  1903               	btfsc	3,2
  1098  01E6  29E8               	goto	u461
  1099  01E7  29E9               	goto	u460
  1100  01E8                     u461:
  1101  01E8  2A20               	goto	l1085
  1102  01E9                     u460:
  1103  01E9                     l1067:
  1104  01E9  01A5               	clrf	___awdiv@counter
  1105  01EA  0AA5               	incf	___awdiv@counter,f
  1106  01EB  29F7               	goto	l1073
  1107  01EC                     l1069:
  1108  01EC  3001               	movlw	1
  1109  01ED                     u475:
  1110  01ED  1003               	clrc
  1111  01EE  0DA0               	rlf	___awdiv@divisor,f
  1112  01EF  0DA1               	rlf	___awdiv@divisor+1,f
  1113  01F0  3EFF               	addlw	-1
  1114  01F1  1D03               	skipz
  1115  01F2  29ED               	goto	u475
  1116  01F3                     l1071:
  1117  01F3  3001               	movlw	1
  1118  01F4  00A4               	movwf	??___awdiv
  1119  01F5  0824               	movf	??___awdiv,w
  1120  01F6  07A5               	addwf	___awdiv@counter,f
  1121  01F7                     l1073:
  1122  01F7  1FA1               	btfss	___awdiv@divisor+1,7
  1123  01F8  29FA               	goto	u481
  1124  01F9  29FB               	goto	u480
  1125  01FA                     u481:
  1126  01FA  29EC               	goto	l1069
  1127  01FB                     u480:
  1128  01FB                     l1075:
  1129  01FB  3001               	movlw	1
  1130  01FC                     u495:
  1131  01FC  1003               	clrc
  1132  01FD  0DA7               	rlf	___awdiv@quotient,f
  1133  01FE  0DA8               	rlf	___awdiv@quotient+1,f
  1134  01FF  3EFF               	addlw	-1
  1135  0200  1D03               	skipz
  1136  0201  29FC               	goto	u495
  1137  0202  0821               	movf	___awdiv@divisor+1,w
  1138  0203  0223               	subwf	___awdiv@dividend+1,w
  1139  0204  1D03               	skipz
  1140  0205  2A08               	goto	u505
  1141  0206  0820               	movf	___awdiv@divisor,w
  1142  0207  0222               	subwf	___awdiv@dividend,w
  1143  0208                     u505:
  1144  0208  1C03               	skipc
  1145  0209  2A0B               	goto	u501
  1146  020A  2A0C               	goto	u500
  1147  020B                     u501:
  1148  020B  2A13               	goto	l1081
  1149  020C                     u500:
  1150  020C                     l1077:
  1151  020C  0820               	movf	___awdiv@divisor,w
  1152  020D  02A2               	subwf	___awdiv@dividend,f
  1153  020E  0821               	movf	___awdiv@divisor+1,w
  1154  020F  1C03               	skipc
  1155  0210  03A3               	decf	___awdiv@dividend+1,f
  1156  0211  02A3               	subwf	___awdiv@dividend+1,f
  1157  0212                     l1079:
  1158  0212  1427               	bsf	___awdiv@quotient,0
  1159  0213                     l1081:
  1160  0213  3001               	movlw	1
  1161  0214                     u515:
  1162  0214  1003               	clrc
  1163  0215  0CA1               	rrf	___awdiv@divisor+1,f
  1164  0216  0CA0               	rrf	___awdiv@divisor,f
  1165  0217  3EFF               	addlw	-1
  1166  0218  1D03               	skipz
  1167  0219  2A14               	goto	u515
  1168  021A                     l1083:
  1169  021A  3001               	movlw	1
  1170  021B  02A5               	subwf	___awdiv@counter,f
  1171  021C  1D03               	btfss	3,2
  1172  021D  2A1F               	goto	u521
  1173  021E  2A20               	goto	u520
  1174  021F                     u521:
  1175  021F  29FB               	goto	l1075
  1176  0220                     u520:
  1177  0220                     l1085:
  1178  0220  0826               	movf	___awdiv@sign,w
  1179  0221  1903               	btfsc	3,2
  1180  0222  2A24               	goto	u531
  1181  0223  2A25               	goto	u530
  1182  0224                     u531:
  1183  0224  2A2A               	goto	l1089
  1184  0225                     u530:
  1185  0225                     l1087:
  1186  0225  09A7               	comf	___awdiv@quotient,f
  1187  0226  09A8               	comf	___awdiv@quotient+1,f
  1188  0227  0AA7               	incf	___awdiv@quotient,f
  1189  0228  1903               	skipnz
  1190  0229  0AA8               	incf	___awdiv@quotient+1,f
  1191  022A                     l1089:
  1192  022A  0828               	movf	___awdiv@quotient+1,w
  1193  022B  00A1               	movwf	?___awdiv+1
  1194  022C  0827               	movf	___awdiv@quotient,w
  1195  022D  00A0               	movwf	?___awdiv
  1196  022E                     l366:
  1197  022E  0008               	return
  1198  022F                     __end_of___awdiv:
  1199                           
  1200                           	psect	text4
  1201  0020                     __ptext4:	
  1202 ;; *************** function _isr *****************
  1203 ;; Defined at:
  1204 ;;		line 71 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          6       0       0       0       0
  1221 ;;      Totals:         6       0       0       0       0
  1222 ;;Total ram usage:        6 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 1
  1225 ;; This function calls:
  1226 ;;		___bmul
  1227 ;; This function is called by:
  1228 ;;		Interrupt level 1
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _isr
  1234  0020                     _isr:
  1235  0020                     i1l1157:
  1236                           
  1237                           ;main.c: 72:     if(INTCONbits.RBIF){
  1238  0020  1C0B               	btfss	11,0	;volatile
  1239  0021  2823               	goto	u64_21
  1240  0022  2824               	goto	u64_20
  1241  0023                     u64_21:
  1242  0023  2835               	goto	i1l1169
  1243  0024                     u64_20:
  1244  0024                     i1l1159:
  1245                           
  1246                           ;main.c: 73:         if(PORTBbits.RB0 ==0){
  1247  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0026  1806               	btfsc	6,0	;volatile
  1250  0027  2829               	goto	u65_21
  1251  0028  282A               	goto	u65_20
  1252  0029                     u65_21:
  1253  0029  282E               	goto	i1l1163
  1254  002A                     u65_20:
  1255  002A                     i1l1161:
  1256                           
  1257                           ;main.c: 74:             PORTD++;
  1258  002A  3001               	movlw	1
  1259  002B  00F4               	movwf	??_isr
  1260  002C  0874               	movf	??_isr,w
  1261  002D  0788               	addwf	8,f	;volatile
  1262  002E                     i1l1163:
  1263                           
  1264                           ;main.c: 76:         if(PORTBbits.RB1==0){
  1265  002E  1886               	btfsc	6,1	;volatile
  1266  002F  2831               	goto	u66_21
  1267  0030  2832               	goto	u66_20
  1268  0031                     u66_21:
  1269  0031  2834               	goto	i1l1167
  1270  0032                     u66_20:
  1271  0032                     i1l1165:
  1272                           
  1273                           ;main.c: 77:             PORTD--;
  1274  0032  3001               	movlw	1
  1275  0033  0288               	subwf	8,f	;volatile
  1276  0034                     i1l1167:
  1277                           
  1278                           ;main.c: 79:         INTCONbits.RBIF=0;
  1279  0034  100B               	bcf	11,0	;volatile
  1280  0035                     i1l1169:
  1281                           
  1282                           ;main.c: 81:     if(PIR1bits.RCIF==1){
  1283  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0037  1E8C               	btfss	12,5	;volatile
  1286  0038  283A               	goto	u67_21
  1287  0039  283B               	goto	u67_20
  1288  003A                     u67_21:
  1289  003A  290C               	goto	i1l124
  1290  003B                     u67_20:
  1291  003B                     i1l1171:
  1292                           
  1293                           ;main.c: 82:         if(RCREG==0x0D){
  1294  003B  300D               	movlw	13
  1295  003C  061A               	xorwf	26,w	;volatile
  1296  003D  1D03               	btfss	3,2
  1297  003E  2840               	goto	u68_21
  1298  003F  2841               	goto	u68_20
  1299  0040                     u68_21:
  1300  0040  2849               	goto	i1l1185
  1301  0041                     u68_20:
  1302  0041                     i1l1173:
  1303                           
  1304                           ;main.c: 83:             PORTA=var;
  1305  0041  0833               	movf	_var,w
  1306  0042  0085               	movwf	5	;volatile
  1307  0043                     i1l1175:
  1308                           
  1309                           ;main.c: 84:             temp =0;
  1310  0043  01FA               	clrf	_temp
  1311  0044                     i1l1177:
  1312                           
  1313                           ;main.c: 85:             var=0;
  1314  0044  01B3               	clrf	_var
  1315  0045                     i1l1179:
  1316                           
  1317                           ;main.c: 86:             upload=1;
  1318  0045  01B4               	clrf	_upload
  1319  0046  0AB4               	incf	_upload,f
  1320  0047                     i1l1181:
  1321                           
  1322                           ;main.c: 87:             download=0;
  1323  0047  01B2               	clrf	_download
  1324  0048                     i1l1183:
  1325                           
  1326                           ;main.c: 88:             carry=0;
  1327  0048  01B1               	clrf	_carry
  1328  0049                     i1l1185:
  1329                           
  1330                           ;main.c: 90:    if (RCREG != 0x0D){
  1331  0049  300D               	movlw	13
  1332  004A  061A               	xorwf	26,w	;volatile
  1333  004B  1903               	btfsc	3,2
  1334  004C  284E               	goto	u69_21
  1335  004D  284F               	goto	u69_20
  1336  004E                     u69_21:
  1337  004E  290C               	goto	i1l124
  1338  004F                     u69_20:
  1339  004F                     i1l1187:
  1340                           
  1341                           ;main.c: 91:         temp_0 = RCREG;
  1342  004F  081A               	movf	26,w	;volatile
  1343  0050  00F4               	movwf	??_isr
  1344  0051  0874               	movf	??_isr,w
  1345  0052  00FC               	movwf	_temp_0
  1346  0053                     i1l1189:
  1347                           
  1348                           ;main.c: 92:             if(temp_0==48){
  1349  0053  3030               	movlw	48
  1350  0054  067C               	xorwf	_temp_0,w
  1351  0055  1D03               	btfss	3,2
  1352  0056  2858               	goto	u70_21
  1353  0057  2859               	goto	u70_20
  1354  0058                     u70_21:
  1355  0058  285B               	goto	i1l1193
  1356  0059                     u70_20:
  1357  0059                     i1l1191:
  1358                           
  1359                           ;main.c: 93:                 temp = 0;
  1360  0059  01FA               	clrf	_temp
  1361                           
  1362                           ;main.c: 94:             }else if(temp_0==49){
  1363  005A  28BC               	goto	i1l1229
  1364  005B                     i1l1193:
  1365  005B  3031               	movlw	49
  1366  005C  067C               	xorwf	_temp_0,w
  1367  005D  1D03               	btfss	3,2
  1368  005E  2860               	goto	u71_21
  1369  005F  2861               	goto	u71_20
  1370  0060                     u71_21:
  1371  0060  2864               	goto	i1l1197
  1372  0061                     u71_20:
  1373  0061                     i1l1195:
  1374                           
  1375                           ;main.c: 95:                 temp = 1;
  1376  0061  01FA               	clrf	_temp
  1377  0062  0AFA               	incf	_temp,f
  1378                           
  1379                           ;main.c: 96:             }else if(temp_0==50){
  1380  0063  28BC               	goto	i1l1229
  1381  0064                     i1l1197:
  1382  0064  3032               	movlw	50
  1383  0065  067C               	xorwf	_temp_0,w
  1384  0066  1D03               	btfss	3,2
  1385  0067  2869               	goto	u72_21
  1386  0068  286A               	goto	u72_20
  1387  0069                     u72_21:
  1388  0069  286F               	goto	i1l1201
  1389  006A                     u72_20:
  1390  006A                     i1l1199:
  1391                           
  1392                           ;main.c: 97:                 temp = 2;
  1393  006A  3002               	movlw	2
  1394  006B  00F4               	movwf	??_isr
  1395  006C  0874               	movf	??_isr,w
  1396  006D  00FA               	movwf	_temp
  1397                           
  1398                           ;main.c: 98:             }else if(temp_0==51){
  1399  006E  28BC               	goto	i1l1229
  1400  006F                     i1l1201:
  1401  006F  3033               	movlw	51
  1402  0070  067C               	xorwf	_temp_0,w
  1403  0071  1D03               	btfss	3,2
  1404  0072  2874               	goto	u73_21
  1405  0073  2875               	goto	u73_20
  1406  0074                     u73_21:
  1407  0074  287A               	goto	i1l1205
  1408  0075                     u73_20:
  1409  0075                     i1l1203:
  1410                           
  1411                           ;main.c: 99:                 temp = 3;
  1412  0075  3003               	movlw	3
  1413  0076  00F4               	movwf	??_isr
  1414  0077  0874               	movf	??_isr,w
  1415  0078  00FA               	movwf	_temp
  1416                           
  1417                           ;main.c: 100:             }else if(temp_0==52){
  1418  0079  28BC               	goto	i1l1229
  1419  007A                     i1l1205:
  1420  007A  3034               	movlw	52
  1421  007B  067C               	xorwf	_temp_0,w
  1422  007C  1D03               	btfss	3,2
  1423  007D  287F               	goto	u74_21
  1424  007E  2880               	goto	u74_20
  1425  007F                     u74_21:
  1426  007F  2885               	goto	i1l1209
  1427  0080                     u74_20:
  1428  0080                     i1l1207:
  1429                           
  1430                           ;main.c: 101:                 temp = 4;
  1431  0080  3004               	movlw	4
  1432  0081  00F4               	movwf	??_isr
  1433  0082  0874               	movf	??_isr,w
  1434  0083  00FA               	movwf	_temp
  1435                           
  1436                           ;main.c: 102:             }else if(temp_0==53){
  1437  0084  28BC               	goto	i1l1229
  1438  0085                     i1l1209:
  1439  0085  3035               	movlw	53
  1440  0086  067C               	xorwf	_temp_0,w
  1441  0087  1D03               	btfss	3,2
  1442  0088  288A               	goto	u75_21
  1443  0089  288B               	goto	u75_20
  1444  008A                     u75_21:
  1445  008A  2890               	goto	i1l1213
  1446  008B                     u75_20:
  1447  008B                     i1l1211:
  1448                           
  1449                           ;main.c: 103:                 temp = 5;
  1450  008B  3005               	movlw	5
  1451  008C  00F4               	movwf	??_isr
  1452  008D  0874               	movf	??_isr,w
  1453  008E  00FA               	movwf	_temp
  1454                           
  1455                           ;main.c: 104:             }else if(temp_0==54){
  1456  008F  28BC               	goto	i1l1229
  1457  0090                     i1l1213:
  1458  0090  3036               	movlw	54
  1459  0091  067C               	xorwf	_temp_0,w
  1460  0092  1D03               	btfss	3,2
  1461  0093  2895               	goto	u76_21
  1462  0094  2896               	goto	u76_20
  1463  0095                     u76_21:
  1464  0095  289B               	goto	i1l1217
  1465  0096                     u76_20:
  1466  0096                     i1l1215:
  1467                           
  1468                           ;main.c: 105:                 temp = 6;
  1469  0096  3006               	movlw	6
  1470  0097  00F4               	movwf	??_isr
  1471  0098  0874               	movf	??_isr,w
  1472  0099  00FA               	movwf	_temp
  1473                           
  1474                           ;main.c: 106:             }else if(temp_0==55){
  1475  009A  28BC               	goto	i1l1229
  1476  009B                     i1l1217:
  1477  009B  3037               	movlw	55
  1478  009C  067C               	xorwf	_temp_0,w
  1479  009D  1D03               	btfss	3,2
  1480  009E  28A0               	goto	u77_21
  1481  009F  28A1               	goto	u77_20
  1482  00A0                     u77_21:
  1483  00A0  28A6               	goto	i1l1221
  1484  00A1                     u77_20:
  1485  00A1                     i1l1219:
  1486                           
  1487                           ;main.c: 107:                 temp = 7;
  1488  00A1  3007               	movlw	7
  1489  00A2  00F4               	movwf	??_isr
  1490  00A3  0874               	movf	??_isr,w
  1491  00A4  00FA               	movwf	_temp
  1492                           
  1493                           ;main.c: 108:             }else if(temp_0==56){
  1494  00A5  28BC               	goto	i1l1229
  1495  00A6                     i1l1221:
  1496  00A6  3038               	movlw	56
  1497  00A7  067C               	xorwf	_temp_0,w
  1498  00A8  1D03               	btfss	3,2
  1499  00A9  28AB               	goto	u78_21
  1500  00AA  28AC               	goto	u78_20
  1501  00AB                     u78_21:
  1502  00AB  28B1               	goto	i1l1225
  1503  00AC                     u78_20:
  1504  00AC                     i1l1223:
  1505                           
  1506                           ;main.c: 109:                 temp = 8;
  1507  00AC  3008               	movlw	8
  1508  00AD  00F4               	movwf	??_isr
  1509  00AE  0874               	movf	??_isr,w
  1510  00AF  00FA               	movwf	_temp
  1511                           
  1512                           ;main.c: 110:             }else if(temp_0==57){
  1513  00B0  28BC               	goto	i1l1229
  1514  00B1                     i1l1225:
  1515  00B1  3039               	movlw	57
  1516  00B2  067C               	xorwf	_temp_0,w
  1517  00B3  1D03               	btfss	3,2
  1518  00B4  28B6               	goto	u79_21
  1519  00B5  28B7               	goto	u79_20
  1520  00B6                     u79_21:
  1521  00B6  28BC               	goto	i1l113
  1522  00B7                     u79_20:
  1523  00B7                     i1l1227:
  1524                           
  1525                           ;main.c: 111:                 temp = 9;
  1526  00B7  3009               	movlw	9
  1527  00B8  00F4               	movwf	??_isr
  1528  00B9  0874               	movf	??_isr,w
  1529  00BA  00FA               	movwf	_temp
  1530  00BB  28BC               	goto	i1l1229
  1531  00BC                     i1l113:
  1532  00BC                     i1l1229:
  1533                           
  1534                           ;main.c: 113:         if (upload == 1){
  1535  00BC  0334               	decf	_upload,w
  1536  00BD  1D03               	btfss	3,2
  1537  00BE  28C0               	goto	u80_21
  1538  00BF  28C1               	goto	u80_20
  1539  00C0                     u80_21:
  1540  00C0  28CD               	goto	i1l1237
  1541  00C1                     u80_20:
  1542  00C1                     i1l1231:
  1543                           
  1544                           ;main.c: 114:             var = temp;
  1545  00C1  087A               	movf	_temp,w
  1546  00C2  00F4               	movwf	??_isr
  1547  00C3  0874               	movf	??_isr,w
  1548  00C4  00B3               	movwf	_var
  1549                           
  1550                           ;main.c: 115:             unit_0 = temp;
  1551  00C5  087A               	movf	_temp,w
  1552  00C6  00F4               	movwf	??_isr
  1553  00C7  0874               	movf	??_isr,w
  1554  00C8  00FB               	movwf	_unit_0
  1555  00C9                     i1l1233:
  1556                           
  1557                           ;main.c: 116:             upload = 0;
  1558  00C9  01B4               	clrf	_upload
  1559  00CA                     i1l1235:
  1560                           
  1561                           ;main.c: 117:             download = 1;
  1562  00CA  01B2               	clrf	_download
  1563  00CB  0AB2               	incf	_download,f
  1564                           
  1565                           ;main.c: 118:         }
  1566  00CC  290C               	goto	i1l124
  1567  00CD                     i1l1237:
  1568  00CD  0332               	decf	_download,w
  1569  00CE  1D03               	btfss	3,2
  1570  00CF  28D1               	goto	u81_21
  1571  00D0  28D2               	goto	u81_20
  1572  00D1                     u81_21:
  1573  00D1  28EA               	goto	i1l1247
  1574  00D2                     u81_20:
  1575  00D2                     i1l1239:
  1576                           
  1577                           ;main.c: 120:             var = (unit_0*10)+temp;
  1578  00D2  300A               	movlw	10
  1579  00D3  00F4               	movwf	??_isr
  1580  00D4  0874               	movf	??_isr,w
  1581  00D5  00F0               	movwf	___bmul@multiplicand
  1582  00D6  087B               	movf	_unit_0,w
  1583  00D7  120A  118A  22C7  120A  118A  	fcall	___bmul
  1584  00DC  077A               	addwf	_temp,w
  1585  00DD  00F5               	movwf	??_isr+1
  1586  00DE  0875               	movf	??_isr+1,w
  1587  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1588  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1589  00E1  00B3               	movwf	_var
  1590  00E2                     i1l1241:
  1591                           
  1592                           ;main.c: 121:             dzn = temp;
  1593  00E2  087A               	movf	_temp,w
  1594  00E3  00F4               	movwf	??_isr
  1595  00E4  0874               	movf	??_isr,w
  1596  00E5  00FD               	movwf	_dzn
  1597  00E6                     i1l1243:
  1598                           
  1599                           ;main.c: 122:             download = 0;
  1600  00E6  01B2               	clrf	_download
  1601  00E7                     i1l1245:
  1602                           
  1603                           ;main.c: 123:             carry = 1;
  1604  00E7  01B1               	clrf	_carry
  1605  00E8  0AB1               	incf	_carry,f
  1606                           
  1607                           ;main.c: 124:         }
  1608  00E9  290C               	goto	i1l124
  1609  00EA                     i1l1247:
  1610  00EA  0331               	decf	_carry,w
  1611  00EB  1D03               	btfss	3,2
  1612  00EC  28EE               	goto	u82_21
  1613  00ED  28EF               	goto	u82_20
  1614  00EE                     u82_21:
  1615  00EE  290C               	goto	i1l99
  1616  00EF                     u82_20:
  1617  00EF                     i1l1249:
  1618                           
  1619                           ;main.c: 126:             var = (unit_0*100)+(dzn*10)+temp;
  1620  00EF  300A               	movlw	10
  1621  00F0  00F4               	movwf	??_isr
  1622  00F1  0874               	movf	??_isr,w
  1623  00F2  00F0               	movwf	___bmul@multiplicand
  1624  00F3  087D               	movf	_dzn,w
  1625  00F4  120A  118A  22C7  120A  118A  	fcall	___bmul
  1626  00F9  00F5               	movwf	??_isr+1
  1627  00FA  3064               	movlw	100
  1628  00FB  00F6               	movwf	??_isr+2
  1629  00FC  0876               	movf	??_isr+2,w
  1630  00FD  00F0               	movwf	___bmul@multiplicand
  1631  00FE  087B               	movf	_unit_0,w
  1632  00FF  120A  118A  22C7  120A  118A  	fcall	___bmul
  1633  0104  0775               	addwf	??_isr+1,w
  1634  0105  077A               	addwf	_temp,w
  1635  0106  00F7               	movwf	??_isr+3
  1636  0107  0877               	movf	??_isr+3,w
  1637  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1639  010A  00B3               	movwf	_var
  1640  010B  28E6               	goto	i1l1243
  1641  010C                     i1l99:	
  1642                           ;main.c: 130:         }}
  1643                           
  1644  010C                     i1l124:
  1645  010C  0879               	movf	??_isr+5,w
  1646  010D  008A               	movwf	10
  1647  010E  0E78               	swapf	??_isr+4,w
  1648  010F  0083               	movwf	3
  1649  0110  0EFE               	swapf	btemp,f
  1650  0111  0E7E               	swapf	btemp,w
  1651  0112  0009               	retfie
  1652  0113                     __end_of_isr:
  1653                           
  1654                           	psect	intentry
  1655  0004                     __pintentry:	
  1656                           ;incstack = 0
  1657                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1658                           
  1659  0004                     interrupt_function:
  1660  007E                     saved_w	set	btemp
  1661  0004  00FE               	movwf	btemp
  1662  0005  0E03               	swapf	3,w
  1663  0006  00F8               	movwf	??_isr+4
  1664  0007  080A               	movf	10,w
  1665  0008  00F9               	movwf	??_isr+5
  1666  0009  120A  118A  2820   	ljmp	_isr
  1667                           
  1668                           	psect	text5
  1669  02C7                     __ptext5:	
  1670 ;; *************** function ___bmul *****************
  1671 ;; Defined at:
  1672 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  multiplier      1    wreg     unsigned char 
  1675 ;;  multiplicand    1    0[COMMON] unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  multiplier      1    3[COMMON] unsigned char 
  1678 ;;  product         1    2[COMMON] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      unsigned char 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         1       0       0       0       0
  1689 ;;      Locals:         2       0       0       0       0
  1690 ;;      Temps:          1       0       0       0       0
  1691 ;;      Totals:         4       0       0       0       0
  1692 ;;Total ram usage:        4 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_isr
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function ___bmul
  1703  02C7                     ___bmul:
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1707                           ;___bmul@multiplier stored from wreg
  1708  02C7  00F3               	movwf	___bmul@multiplier
  1709  02C8                     i1l1035:
  1710  02C8  01F2               	clrf	___bmul@product
  1711  02C9                     i1l1037:
  1712  02C9  1C73               	btfss	___bmul@multiplier,0
  1713  02CA  2ACC               	goto	u42_21
  1714  02CB  2ACD               	goto	u42_20
  1715  02CC                     u42_21:
  1716  02CC  2AD1               	goto	i1l1041
  1717  02CD                     u42_20:
  1718  02CD                     i1l1039:
  1719  02CD  0870               	movf	___bmul@multiplicand,w
  1720  02CE  00F1               	movwf	??___bmul
  1721  02CF  0871               	movf	??___bmul,w
  1722  02D0  07F2               	addwf	___bmul@product,f
  1723  02D1                     i1l1041:
  1724  02D1  1003               	clrc
  1725  02D2  0DF0               	rlf	___bmul@multiplicand,f
  1726  02D3                     i1l1043:
  1727  02D3  1003               	clrc
  1728  02D4  0CF3               	rrf	___bmul@multiplier,f
  1729  02D5  0873               	movf	___bmul@multiplier,w
  1730  02D6  1D03               	btfss	3,2
  1731  02D7  2AD9               	goto	u43_21
  1732  02D8  2ADA               	goto	u43_20
  1733  02D9                     u43_21:
  1734  02D9  2AC9               	goto	i1l1037
  1735  02DA                     u43_20:
  1736  02DA                     i1l1045:
  1737  02DA  0872               	movf	___bmul@product,w
  1738  02DB                     i1l239:
  1739  02DB  0008               	return
  1740  02DC                     __end_of___bmul:
  1741  007E                     btemp	set	126	;btemp
  1742  007E                     wtemp0	set	126
  1743                           
  1744                           	psect	config
  1745                           
  1746                           ;Config register CONFIG1 @ 0x2007
  1747                           ;	Oscillator Selection bits
  1748                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1749                           ;	Watchdog Timer Enable bit
  1750                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1751                           ;	Power-up Timer Enable bit
  1752                           ;	PWRTE = OFF, PWRT disabled
  1753                           ;	RE3/MCLR pin function select bit
  1754                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1755                           ;	Code Protection bit
  1756                           ;	CP = OFF, Program memory code protection is disabled
  1757                           ;	Data Code Protection bit
  1758                           ;	CPD = OFF, Data memory code protection is disabled
  1759                           ;	Brown Out Reset Selection bits
  1760                           ;	BOREN = OFF, BOR disabled
  1761                           ;	Internal External Switchover bit
  1762                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1763                           ;	Fail-Safe Clock Monitor Enabled bit
  1764                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1765                           ;	Low Voltage Programming Enable bit
  1766                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1767                           ;	In-Circuit Debugger Mode bit
  1768                           ;	DEBUG = 0x1, unprogrammed default
  1769  2007                     	org	8199
  1770  2007  20D4               	dw	8404
  1771                           
  1772                           ;Config register CONFIG2 @ 0x2008
  1773                           ;	Brown-out Reset Selection bit
  1774                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1775                           ;	Flash Program Memory Self Write Enable bits
  1776                           ;	WRT = OFF, Write protection off
  1777  2008                     	org	8200
  1778  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         7
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     12      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___bmul

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1204
                                              9 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                         _initCONFIG
 ---------------------------------------------------------------------------------
 (1) _initCONFIG                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0     320
                                              4 COMMON     6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _initCONFIG

 _isr (ROOT)
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 17 02:53:29 2021

                      _c 0030           ___bmul@product 0072             ___awdiv@sign 0026  
                    l127 02C6                      l366 022E                      l379 0289  
                    l991 0297                      l993 0299                      l995 029E  
                    l987 028A                      l997 02A0                      l989 0290  
                    l999 02A1                      u500 020C                      u501 020B  
                    u520 0220                      u440 01CD                      u521 021F  
                    u505 0208                      u441 01CC                      u530 0225  
                    u450 01D8                      u610 027B                      u531 0224  
                    u515 0214                      u451 01D7                      u611 027A  
                    u460 01E9                      u620 0280                      u540 0236  
                    u461 01E8                      u621 027F                      u605 026F  
                    u541 0235                      u550 0241                      u630 017A  
                    u551 0240                      u631 0179                      u480 01FB  
                    u560 024C                      u481 01FA                      u561 024B  
                    u475 01ED                      u580 025E                      u581 025D  
                    u590 0268                      u495 01FC                      u591 0267  
                    u575 0250                      u595 0264                      u837 0180  
                    u847 018F                      u857 019E                      u867 01AD  
                    u877 01BB                      _dzn 007D                      _isr 0020  
                    _var 0033             ___awmod@sign 0026                     l1001 02A2  
                   l1011 02AB                     l1003 02A5                     l1101 023D  
                   l1021 02B8                     l1013 02AE                     l1005 02A8  
                   l1111 0256                     l1103 0241                     l1031 02C5  
                   l1023 02BB                     l1015 02B3                     l1007 02A9  
                   l1121 0275                     l1113 025A                     l1105 0246  
                   l1025 02BC                     l1017 02B6                     l1009 02AA  
                   l1051 01C9                     l1115 025E                     l1107 024C  
                   l1123 027B                     l1027 02BD                     l1019 02B7  
                   l1131 0113                     l1061 01DD                     l1053 01CD  
                   l1125 0280                     l1117 0268                     l1109 024F  
                   l1029 02BE                     l1141 0160                     l1133 0118  
                   l1071 01F3                     l1063 01E1                     l1055 01D2  
                   l1127 0285                     l1119 026E                     l1151 0198  
                   l1143 0176                     l1135 011E                     l1081 0213  
                   l1073 01F7                     l1065 01E3                     l1057 01D4  
                   l1049 01C6                     l1153 01A2                     l1145 017A  
                   l1137 0134                     l1083 021A                     l1075 01FB  
                   l1067 01E9                     l1059 01D8                     l1147 0184  
                   l1155 01BF                     l1139 014A                     l1077 020C  
                   l1069 01EC                     l1085 0220                     l1093 022F  
                   l1149 0189                     l1087 0225                     l1079 0212  
                   l1095 0232                     l1089 022A                     l1097 0236  
                   l1099 023B                     ?_isr 0070                     _IOCB 0096  
                   i1l99 010C                     _WPUB 0095                     _main 0113  
                   _temp 007A                     _unit 002F                     btemp 007E  
                   start 000C        ___bmul@multiplier 0073                    ??_isr 0074  
                  ?_main 0070          __end_of___awdiv 022F          __end_of___awmod 028A  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l113 00BC  
                  i1l124 010C                    i1l239 02DB          ___awdiv@counter 0025  
                  _RCREG 001A                    u42_20 02CD                    u42_21 02CC  
                  _SPBRG 0099                    u43_20 02DA                    u43_21 02D9  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u70_20 0059                    u70_21 0058  
                  u71_20 0061                    u71_21 0060                    u80_20 00C1  
                  u72_20 006A                    u64_20 0024                    u80_21 00C0  
                  u72_21 0069                    u64_21 0023                    u81_20 00D2  
                  u73_20 0075                    u65_20 002A                    u81_21 00D1  
                  u73_21 0074                    u65_21 0029                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u82_20 00EF                    u74_20 0080                    u66_20 0032  
                  u82_21 00EE                    u74_21 007F                    u66_21 0031  
                  u75_20 008B                    u67_20 003B                    u75_21 008A  
                  u67_21 003A                    u76_20 0096                    u68_20 0041  
                  u76_21 0095                    u68_21 0040                    u77_20 00A1  
                  u69_20 004F                    u77_21 00A0                    u69_21 004E  
                  u78_20 00AC                    u78_21 00AB                    u79_20 00B7  
                  u79_21 00B6                    _TXREG 0019                    _carry 0031  
                  _dozns 002E                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 01C6  
                 ??_main 0029         ___awdiv@dividend 0022                   _ANSELH 0189  
                 i1l1041 02D1                   i1l1201 006F                   i1l1043 02D3  
                 i1l1035 02C8                   i1l1211 008B                   i1l1203 0075  
                 i1l1045 02DA                   i1l1037 02C9                   i1l1221 00A6  
                 i1l1213 0090                   i1l1205 007A                   i1l1039 02CD  
                 i1l1231 00C1                   i1l1223 00AC                   i1l1215 0096  
                 i1l1207 0080                   i1l1241 00E2                   i1l1233 00C9  
                 i1l1225 00B1                   i1l1217 009B                   i1l1209 0085  
                 i1l1161 002A                   i1l1243 00E6                   i1l1235 00CA  
                 i1l1227 00B7                   i1l1219 00A1                   i1l1171 003B  
                 i1l1163 002E                   i1l1245 00E7                   i1l1237 00CD  
                 i1l1229 00BC                   i1l1181 0047                   i1l1173 0041  
                 i1l1165 0032                   i1l1157 0020                   i1l1239 00D2  
                 i1l1247 00EA                   i1l1191 0059                   i1l1183 0048  
                 i1l1175 0043                   i1l1167 0034                   i1l1159 0024  
                 i1l1249 00EF                   i1l1193 005B                   i1l1177 0044  
                 i1l1185 0049                   i1l1169 0035                   i1l1195 0061  
                 i1l1187 004F                   i1l1179 0045                   i1l1197 0064  
                 i1l1189 0053                   i1l1199 006A                   _SPBRGH 009A  
                 ___bmul 02C7                ??___awdiv 0024                ??___awmod 0024  
       ___awdiv@quotient 0027          ___awmod@divisor 0020                   _temp_0 007C  
        ___awmod@counter 0025                   _unit_0 007B                   _upload 0034  
                 saved_w 007E  __end_of__initialization 001C      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 02DC           _OPTION_REGbits 0081  
             __pbssBANK0 0031               __pmaintext 0113                  ?___bmul 0070  
             __pintentry 0004               _initCONFIG 028A          __size_of___bmul 0015  
                ___awdiv 01C6                  ___awmod 022F                  __ptext1 028A  
                __ptext2 022F                  __ptext3 01C6                  __ptext4 0020  
                __ptext5 02C7                  _dozns_0 002C             __size_of_isr 00F3  
       ___awmod@dividend 0022     end_of_initialization 001C                _RCSTAbits 0018  
              _PORTBbits 0006              ?_initCONFIG 0070                _TXSTAbits 0098  
         __end_of___bmul 02DC              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_isr 0113                 ??___bmul 0071              __pdataBANK0 0034  
    __size_of_initCONFIG 003D              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 002C                 ?___awdiv 0020  
               ?___awmod 0020        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C             ??_initCONFIG 0020         __size_of___awdiv 0069  
       __size_of___awmod 005B       __end_of_initCONFIG 02C7                 _download 0032  
          __size_of_main 00B3                 _hundreds 002D               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
